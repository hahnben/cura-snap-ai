# JWT secret from Supabase (required for authentication)
# WARNING: In production, SUPABASE_JWT_SECRET environment variable MUST be set
# The fallback value is only for local development and testing
supabase.jwt.secret=${SUPABASE_JWT_SECRET}

# PostgreSQL DB connection via Supabase Shared Pooler
# For development, you can set DATABASE_URL environment variable
# or use the test profile with: --spring.profiles.active=test
spring.datasource.url=${DATABASE_URL}

# Hibernate and SQL formatting (development defaults)
spring.jpa.hibernate.ddl-auto=${DDL_AUTO:none}
spring.jpa.show-sql=${SHOW_SQL:true}
spring.jpa.properties.hibernate.format_sql=true

# Database auto-configuration (will be disabled if no DATABASE_URL is set)
spring.autoconfigure.exclude=${AUTOCONFIGURE_EXCLUDE:}

# Agent Service Configuration
agent.service.url=${AGENT_SERVICE_URL:http://localhost:8001}
agent.service.enabled=${AGENT_SERVICE_ENABLED:true}

# Transcription Service Configuration
transcription.service.url=${TRANSCRIPTION_SERVICE_URL:http://localhost:8002}
transcription.service.enabled=${TRANSCRIPTION_SERVICE_ENABLED:true}
transcription.service.timeout=${TRANSCRIPTION_SERVICE_TIMEOUT:30000}

# Multipart File Upload Configuration (Fallback Security Limits)
# Primary limits should be enforced by Caddy reverse proxy
spring.servlet.multipart.max-file-size=25MB
spring.servlet.multipart.max-request-size=30MB
spring.servlet.multipart.enabled=true
spring.servlet.multipart.file-size-threshold=2KB

# Redis Configuration for Async Processing and Caching
# SECURITY: All Redis settings MUST use environment variables in production
spring.data.redis.host=${REDIS_HOST:localhost}
spring.data.redis.port=${REDIS_PORT:6379}
spring.data.redis.database=${REDIS_DATABASE:0}
spring.data.redis.password=${REDIS_PASSWORD:defaultpass}
spring.data.redis.enabled=${REDIS_ENABLED:true}
spring.data.redis.timeout=2000ms
spring.data.redis.lettuce.pool.max-active=8
spring.data.redis.lettuce.pool.max-idle=8
spring.data.redis.lettuce.pool.min-idle=0
spring.data.redis.lettuce.pool.max-wait=-1ms

# SECURITY: Actuator endpoint protection
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=when-authorized

# Async Processing Configuration
spring.task.execution.pool.core-size=4
spring.task.execution.pool.max-size=16
spring.task.execution.pool.queue-capacity=100
spring.task.execution.thread-name-prefix=async-

# Audio Job Worker Configuration (Legacy - now superseded by Worker Pool)
app.audio.worker.enabled=${AUDIO_WORKER_ENABLED:false}
app.audio.worker.processing-interval=${AUDIO_WORKER_INTERVAL:5000}
app.audio.worker.max-concurrent-jobs=${AUDIO_WORKER_MAX_JOBS:5}

# Worker Pool Configuration (Enhanced Multi-Worker System)
app.worker.pool.enabled=${WORKER_POOL_ENABLED:true}
app.worker.pool.audio.size=${WORKER_POOL_AUDIO_SIZE:2}
app.worker.pool.text.size=${WORKER_POOL_TEXT_SIZE:1}
app.worker.pool.processing.interval=${WORKER_POOL_PROCESSING_INTERVAL:5000}
app.worker.pool.shutdown.timeout=${WORKER_POOL_SHUTDOWN_TIMEOUT:30}

# Worker Health Service Configuration
app.worker.health.enabled=${WORKER_HEALTH_ENABLED:true}
app.worker.health.heartbeat.interval=${WORKER_HEALTH_HEARTBEAT_INTERVAL:30}
app.worker.health.failure.threshold=${WORKER_HEALTH_FAILURE_THRESHOLD:5}

# Adaptive Retry Service Configuration (Phase 2.2)
app.retry.adaptive.enabled=${ADAPTIVE_RETRY_ENABLED:true}
app.retry.adaptive.system.load.update.interval=${ADAPTIVE_RETRY_SYSTEM_LOAD_INTERVAL:60}
app.retry.adaptive.pattern.cache.size=${ADAPTIVE_RETRY_PATTERN_CACHE_SIZE:1000}

# Circuit Breaker Configuration (Phase 2.2)
app.circuit.breaker.enabled=${CIRCUIT_BREAKER_ENABLED:true}
app.circuit.breaker.failure.threshold=${CIRCUIT_BREAKER_FAILURE_THRESHOLD:5}
app.circuit.breaker.timeout.seconds=${CIRCUIT_BREAKER_TIMEOUT_SECONDS:30}
app.circuit.breaker.half.open.max.calls=${CIRCUIT_BREAKER_HALF_OPEN_MAX_CALLS:3}

# Error Classification Configuration (Phase 2.2)
app.error.classification.enabled=${ERROR_CLASSIFICATION_ENABLED:true}
app.error.classification.cache.size=${ERROR_CLASSIFICATION_CACHE_SIZE:500}
app.error.classification.cache.ttl.seconds=${ERROR_CLASSIFICATION_CACHE_TTL:3600}

# Enhanced Dead Letter Queue Configuration (Phase 2.2)
app.dlq.enhanced.enabled=${DLQ_ENHANCED_ENABLED:true}
app.dlq.max.size.per.queue=${DLQ_MAX_SIZE_PER_QUEUE:2000}
app.dlq.retention.days=${DLQ_RETENTION_DAYS:14}
app.dlq.retry.cooldown.minutes=${DLQ_RETRY_COOLDOWN_MINUTES:30}
app.dlq.cleanup.interval.hours=${DLQ_CLEANUP_INTERVAL_HOURS:1}

# Service Degradation Configuration (Phase 2.2)
app.degradation.enabled=${DEGRADATION_ENABLED:true}
app.degradation.check.interval.seconds=${DEGRADATION_CHECK_INTERVAL:30}
app.degradation.health.threshold.minor=${DEGRADATION_HEALTH_THRESHOLD_MINOR:85}
app.degradation.health.threshold.moderate=${DEGRADATION_HEALTH_THRESHOLD_MODERATE:70}
app.degradation.health.threshold.major=${DEGRADATION_HEALTH_THRESHOLD_MAJOR:50}

# Enhanced Monitoring & Alerting Configuration (Phase 2.2)
app.monitoring.enhanced.enabled=${MONITORING_ENHANCED_ENABLED:true}
app.monitoring.metrics.collection.interval.seconds=${MONITORING_METRICS_INTERVAL:30}
app.monitoring.alerts.evaluation.interval.seconds=${MONITORING_ALERTS_INTERVAL:60}
app.monitoring.metrics.retention.days=${MONITORING_METRICS_RETENTION_DAYS:7}
app.monitoring.alerts.retention.days=${MONITORING_ALERTS_RETENTION_DAYS:7}

# Agent Service Caching Configuration (Phase 3.1)
# PERFORMANCE: Caching reduces OpenAI API calls by 60-80% for repeated content
app.agent.cache.enabled=${AGENT_CACHE_ENABLED:true}
app.agent.cache.ttl.hours=${AGENT_CACHE_TTL_HOURS:24}
app.agent.cache.key.salt=${AGENT_CACHE_KEY_SALT:curasnap-default-salt}
app.agent.cache.metrics.enabled=${AGENT_CACHE_METRICS_ENABLED:true}
